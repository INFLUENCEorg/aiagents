parameters:
  all:
    mode: 'train'
    load: false
    name: 'Two_Grid_V_Test'
    algorithm: DQN
    port: 8000
    gui: false
    env_type: 'SUMO'

    max_steps: 2.0e+6
    max_episode_steps: 5.0e+3
    frame_height: 150 # TODO: 1000x0.2=200 (currently 5 meters per pixel)
    frame_width: 100 # TODO: 1500x0.2=300 (currently 5 meters per pixel)
    num_frames: 4 # TODO: could try 10 for better performance later
    skip_frames: 1
    gamma: 0.99
    learning_rate: 2.5e-4
    batch_size: 32
    memory_size: 10000 # TODO: 30000 - it is supposed to be 30000
    train_frequency: 1
    save_frequency: 5.0e+4
    summary_frequency: 1.0e+4
    tensorboard: false
    iteration: -1
    episode: 0
    seedlist: [43, 44, 45]

    # DQN only
    freeze_interval: 30000
    double_dqn: True
    epsilon: 0.1

    ######################## SUMO SCEANRIO ########################

    # the scene
    scene: 'two_grid_V'
    tlphasesfile: 'two_grid_V.net.xml'

    # vehicle generation
    car_tm: 1000
    car_pr: 0.1

    # Yello light time
    y_t: 6

    # state representation
    box_bottom_corner: [0, 0]
    box_top_corner: [1000, 1500]
    resolutionInPixelsPerMeterX: 0.1
    resolutionInPixelsPerMeterY: 0.1
    state_type: 'ldm_state' # The type of state to use as input for the network. ('bin' (Position Matrix), 'bin_light' (Position Light Matrix), 'value' (Value Matrix))

    # routes
    route_starts: ['right_l1 l1_left', 'left_l1 l1_right', 'right_l0 l0_left', 'left_l0 l0_right', 'top_l1 l1_l0 l0_bottom', 'bottom_l0 l0_l1 l1_top']
    route_segments: []
    route_ends: []
    route_max_segments: 0
    route_min_segments: 0

    # I have no idea
    local_rewards: True
    waiting_penalty: False
    scaling_factor: 10 # for rescaling reward
    fast: false
    speed_dev: 0.0 # Can be used to vary the speeds of cars, according to a normal distribution with mean 1 and standard deviation speed_dev (SUMOs default is 0.1)

    # traffic light positions (I NEED TO CHANGE THIS)
    lightPositions: {"0":[[498.40, 507.42], [492.54, 498.38], [501.58, 492.54], [507.45, 501.58]], "1": [[498.40, 1007.42], [492.54, 998.38], [501.58, 992.54], [507.45, 1001.58]]}
